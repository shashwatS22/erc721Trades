syntax = "proto3";

import "google/protobuf/timestamp.proto";

package transfer.v1;

enum Market {
    UNKNOWN = 0;
    WYVERN = 1;
    OPENSEA = 2;
}

message Transfers {
    repeated Transfer transfers = 1;
}

message Transfer {
    string evt_tx_hash = 1;           // length-delimited (wire type 2)
    uint32 evt_index = 2;             // varint (wire type 0)
    google.protobuf.Timestamp evt_block_time = 3;  // length-delimited (wire type 2)
    uint64 evt_block_number = 4;      // varint (wire type 0)
    string from = 5;                  // length-delimited (wire type 2)
    string to = 6;                    // length-delimited (wire type 2)
    string collection_address = 8;     // length-delimited (wire type 2)
    string token_id = 9;              // length-delimited (wire type 2)
    bool is_burned = 10;              // varint (wire type 0)
    bool is_minted = 11;              // varint (wire type 0)
    bool is_traded = 12;              // varint (wire type 0)
    Market market = 13;               // varint (wire type 0)
    repeated TransferLog transferLogs = 14;  // length-delimited (wire type 2)
}

message Trades {
    repeated Trade trades = 1;
}

message Collections {
    repeated Collection collections = 1;
}

message Tokens {
    repeated Token tokens = 1;
}

message TransferLog {
    string address = 1;
    string data = 2;
    repeated string topics = 3;
}

message Trade {
    string id = 1;                    
    string hash = 2;                  
    uint64 block_number = 3;          
    uint64 timestamp = 4;             
    string collection_address = 5;     
    string token_id = 6;         
    uint64 fee = 7;      
    string erc20_token_amount = 8;    
    string erc20_token_address = 9;  
    string marketplace_address = 10;    
    string marketplace_name = 11;     
} 

message Token {
    string id = 1;                    
    string collection_address = 2;     
    string token_id = 3;                         
    string owner = 4;                 
    uint64 mint_timestamp = 5;        
}

message Collection {
    string id = 1;                    // Contract address
    uint64 token_count = 2;           // Total number of tokens
    uint64 owner_count = 3;           // Total number of unique owners
    uint64 event_count = 4;           // Total number of events
    uint64 creation_timestamp = 5;     // Creation timestamp
    uint64 creation_block = 6;        // Creation block number
}

message ERC20s {
    repeated ERC20 erc20s = 1;
}

message ERC20 {
    string id = 1;
    string address = 2;
}




